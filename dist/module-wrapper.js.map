{"version":3,"sources":["../src/module-wrapper.js"],"names":[],"mappings":"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","file":"module-wrapper.js","sourcesContent":["'use strict'\r\n\r\nconst instanceRef = require('./util/instance-ref');\r\n\r\nexports.ModuleWrapper = class ModuleWrapper {\r\n\r\n    constructor (xublitModule) {\r\n\r\n        Object.defineProperty(this, 'ref', {\r\n            value: xublitModule.ref,\r\n            writable: false,\r\n            enumerable: true,\r\n        });\r\n\r\n        Object.defineProperties(this, {\r\n\r\n            ref: {\r\n                value: xublitModule.ref,\r\n                writable: false,\r\n                enumerable: true,\r\n            },\r\n\r\n            dependencyRefs: {\r\n                value: xublitModule.inject.slice(0),\r\n                writable: false,\r\n                enumerable: true,\r\n            },\r\n\r\n            bootstrapFn: {\r\n                value: xublitModule.bootstrap,\r\n                writable: false,\r\n                enumerable: true,\r\n            },\r\n\r\n            resolvedDependencies: {\r\n                value: [],\r\n                writable: false,\r\n                enumerable: true,\r\n            },\r\n\r\n        });\r\n\r\n    }\r\n\r\n    get instanceOnly () {\r\n        return /^[!A-Z]$/.test(this.ref.substr(0, 1));\r\n    }\r\n\r\n    get bootstrapped () {\r\n        return Boolean('_bootstrapped' in this && this._bootstrapped);\r\n    }\r\n\r\n    get numDependencies () {\r\n        return this.dependencyRefs.length;\r\n    }\r\n\r\n    get classRef () {\r\n        return true === this.instanceOnly ? undefined : this.ref;\r\n    }\r\n\r\n    get instanceRef () {\r\n        return true === this.instanceOnly ? this.ref : instanceRef(this.ref);\r\n    }\r\n\r\n    isBootstrapped () {\r\n        return true === this.bootstrapped;\r\n    }\r\n\r\n    injectableFor (ref) {\r\n        \r\n        switch (ref) {\r\n            case this.instanceRef:\r\n                return this.bootstrappedInstance;\r\n            case this.classRef:\r\n                return this.bootstrappedClass;\r\n        }\r\n\r\n    }\r\n\r\n    bootstrap (resolvedDependencies) {\r\n\r\n        if (true === this.bootstrapped) {\r\n            return this;\r\n        }\r\n\r\n        if (!Array.isArray(resolvedDependencies)) {\r\n            throw new TypeError('Resolved dependencies must be an Array');\r\n        }\r\n\r\n        assertDependencyCountMatch(this, resolvedDependencies);\r\n\r\n        try {\r\n            var Module = this.bootstrapFn(...resolvedDependencies);\r\n        }\r\n        catch (error) {\r\n            // Bootstrap failed while executing module's bootstrap function\r\n        }\r\n\r\n        Object.defineProperty(this, '_bootstrapped', {\r\n            value: Module,\r\n            writable: false,\r\n            enumerable: true,\r\n        });\r\n\r\n        if (false === this.instanceOnly) {\r\n            Object.defineProperty(this, 'bootstrappedClass', {\r\n                value: Module,\r\n                writable: false,\r\n                enumerable: true,\r\n            });\r\n        }\r\n\r\n        Object.defineProperty(this, 'bootstrappedInstance', {\r\n            value: new Module(),\r\n            writable: false,\r\n            enumerable: true,\r\n        });\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n};\r\n\r\nfunction assertDependencyCountMatch (resolvedDependencies, moduleWrapper) {\r\n    if (resolvedDependencies.length !== moduleWrapper.numDependencies) {\r\n        throw new Error(util.format(\r\n            'Dependency miscount: Expected %s, got %s',\r\n            moduleWrapper.numDependencies,\r\n            resolvedDependencies.length\r\n        ));\r\n    }\r\n}"]}