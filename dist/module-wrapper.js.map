{"version":3,"sources":["../src/module-wrapper.es6"],"names":[],"mappings":"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","file":"module-wrapper.js","sourcesContent":["import * as util from 'util';\n\nimport InjectableClass from './injectable-class';\nimport InjectableInstance from './injectable-instance';\n\nimport { instanceRef } from './util';\n\nexport default class ModuleWrapper {\n\n    constructor (xublitModule, ref) {\n\n        if (!ref) {\n            throw new Error('Invalid value for 2nd argument');\n        }\n\n        this.defineEnumerable('ref', ref)\n            .defineEnumerable('bootstrapFn', xublitModule.bootstrap)\n            .defineEnumerable('dependencyRefs', xublitModule.inject.slice(0));\n\n    }\n\n    get refTypeIdentifier () {\n        return this.ref.substr(0, 1);\n    }\n\n    get isAbstractClass () {\n        return /^Abstract[A-Z]/.test(this.ref);\n    }\n\n    get isOnlyInjectableAsInstance () {\n        return true === this.isInjectableAsInstance &&\n            false === this.isInjectableAsClass;\n    }\n\n    get isInjectableAsInstance () {\n        return false === this.isAbstractClass &&\n            '!' !== this.refTypeIdentifier;\n    }\n\n    get isInjectableAsClass () {\n        return this.isAbstractClass ||\n            /^[A-Z]$/.test(this.refTypeIdentifier);\n    }\n\n    get bootstrapped () {\n        return Boolean('_bootstrapped' in this && this._bootstrapped);\n    }\n\n    get numDependencies () {\n        return this.dependencyRefs.length;\n    }\n\n    get classRef () {\n\n        if (false === this.isInjectableAsClass) {\n            return undefined;\n        }\n\n        return this.ref;\n\n    }\n\n    get instanceRef () {\n\n        if (false === this.isInjectableAsInstance) {\n            return undefined;\n        }\n\n        if (true === this.isOnlyInjectableAsInstance) {\n            return this.ref;\n        }\n\n        if (true === this.isInjectableAsClass) {\n            return instanceRef(this.ref);\n        }\n\n    }\n\n    get isBootstrapped () {\n        return undefined !== this.bootstrapReturnValue;\n    }\n\n    setBootstrapScope (bootstrapScope) {\n        this.defineEnumerable('bootstrapScope', bootstrapScope);\n        return this;\n    }\n\n    defineEnumerable (prop, value) {\n\n        Object.defineProperty(this, prop, {\n            value: value,\n            enumerable: true,\n        });\n\n        return this;\n\n    }\n\n    injectableFor (ref) {\n        \n        switch (ref) {\n            case this.instanceRef:\n                return this.injectableInstance;\n            case this.classRef:\n                return this.injectableClass;\n        }\n\n    }\n\n    bootstrap (resolvedDependencies) {\n\n        if (this.isBootstrapped) {\n            return this;\n        }\n\n        assertValidDependencies(resolvedDependencies, this);\n\n        this.defineEnumerable(\n            'bootstrapReturnValue',\n            bootstrap(this, this.bootstrapFn, resolvedDependencies)\n        );\n\n        parseBootstrapReturnValueFor(this);\n\n        return this;\n\n    }\n\n}\n\nfunction assertValidDependencies (resolvedDependencies, moduleWrapper) {\n\n    if (!Array.isArray(resolvedDependencies)) {\n        throw new TypeError('Resolved dependencies must be an Array');\n    }\n\n    if (resolvedDependencies.length !== moduleWrapper.numDependencies) {\n        throw new Error(util.format(\n            'resolvedDependencies mismatch: Expected %s, got %s',\n            moduleWrapper.numDependencies,\n            resolvedDependencies.length\n        ));\n    }\n\n}\n\nfunction bootstrap (moduleWrapper, bootstrapFn, resolvedDependencies) {\n\n    var moduleRef = moduleWrapper.moduleRef;\n    var bootstrapScope = moduleWrapper.bootstrapScope;\n\n    try {\n        return bootstrapFn.call(bootstrapScope, ...resolvedDependencies);\n    }\n    catch (error) {\n        // Bootstrap failed while executing module's bootstrap function\n        let originalErrorMsg = error.message;\n        throw new Error(util.format(\n            'Failed to bootstrap module %s: %s', moduleRef, originalErrorMsg\n        ));\n    }\n\n}\n\nfunction parseBootstrapReturnValueFor (moduleWrapper) {\n\n    var ref = moduleWrapper.ref;\n    var Module = moduleWrapper.bootstrapReturnValue;\n\n    if (true === moduleWrapper.isInjectableAsClass) {\n        moduleWrapper.defineEnumerable(\n            'injectableClass', new InjectableClass(moduleWrapper)\n        );\n    }\n\n    if (true === moduleWrapper.isInjectableAsInstance) {\n        moduleWrapper.defineEnumerable(\n            'injectableInstance', new InjectableInstance(moduleWrapper)\n        );\n    }\n\n}"]}