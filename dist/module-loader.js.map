{"version":3,"sources":["../src/module-loader.js"],"names":[],"mappings":"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","file":"module-loader.js","sourcesContent":["const fs = require('fs');\r\nconst path = require('path');\r\n\r\nexport function includeModulesFrom (includeDirPaths) {\r\n\r\n    var potentials = {};\r\n    var modules = [];\r\n\r\n    includeDirPaths.forEach(function (includeDirPath) {\r\n\r\n        var dirname;\r\n        var includeDirs;\r\n\r\n        var pathParts = includeDirPath.split(path.sep);\r\n\r\n        if (pathParts.slice(0).pop().substr('*') > -1) {\r\n            includeDirs = new RegExp(\r\n                '^[^\\.]{1,2}' + pathParts.pop().replace('*', '[A-Z-_.]*'),\r\n                'i'\r\n            );\r\n        }\r\n\r\n        dirname = pathParts.join(path.sep);\r\n\r\n        Object.assign(potentials, findXublits(dirname, {\r\n            includeDirs: includeDirs,\r\n            recursive: false,\r\n        }));\r\n\r\n    });\r\n\r\n    potentials.forEach(function (module) {\r\n\r\n        if (!isInjectorModule(module)) {\r\n            return;\r\n        }\r\n\r\n        modules.push(module);\r\n\r\n    });\r\n\r\n    return modules;\r\n\r\n}\r\n\r\nfunction isInjectorModule (module) {\r\n    \r\n    if (!module) {\r\n        return false;\r\n    }\r\n\r\n    if (!module.name) {\r\n        return false;\r\n    }\r\n\r\n    if (!module.bootstrap || 'function' !== typeof module.bootstrap) {\r\n        return false;\r\n    }\r\n\r\n    if (!module.inject || !Array.isArray(module.inject)) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\nfunction findXublits (dirname, opts) {\r\n    \r\n    opts = opts || {};\r\n\r\n    var potentialsInThisDir = {};\r\n    var includeDirs = 'includeDirs' in opts ? opts.includeDirs : /^[^\\.]{1,2}/;\r\n    var recursive = 'recursive' in opts ? opts.recursive : true;\r\n\r\n    function includeDirectory (dirname) {\r\n        return recursive || includeDirs.test(dirname);\r\n    }\r\n\r\n    var filenames = fs.readdirSync(dirname);\r\n\r\n    filenames.forEach(function (filename) {\r\n\r\n        var filepath = dirname + '/' + filename;\r\n\r\n        var isDirectory = fs.statSync(filepath).isDirectory();\r\n        if (!isDirectory) {\r\n\r\n            var match = /\\.(js|json|node)$/i.test(filename);\r\n            if (match) {\r\n                var module = tryToRequire(filepath);\r\n                if (module) {\r\n                    potentialsInThisDir[filepath] = module;\r\n                }\r\n            }\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        var potentialsInSubDirs = findXublits(filepath, {\r\n            includeDirs: includeDirs,\r\n        });\r\n\r\n        Object.assign(potentialsInThisDir, potentialsInSubDirs);\r\n\r\n    });\r\n\r\n    return potentialsInThisDir;\r\n\r\n}\r\n\r\nfunction tryToRequire (path) {\r\n    try {\r\n        return require(path);\r\n    }\r\n    catch (error) {\r\n        if ('MODULE_NOT_FOUND' === error.code) {\r\n            return undefined;\r\n        }\r\n        throw error;\r\n    }\r\n}"]}