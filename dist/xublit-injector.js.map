{"version":3,"sources":["../src/xublit-injector.js"],"names":[],"mappings":"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","file":"xublit-injector.js","sourcesContent":["const path = require('path');\r\nconst EventEmitter = require('events');\r\n\r\nconst rootAppPath = path.dirname(require.main.filename);\r\nconst DEFAULT_MODULES_PATH = path.join(DEFAULT_APP_ROOT_PATH, 'modules');\r\n\r\nimport { ModuleWrapper } from './module-wrapper';\r\nimport { includeModulesFrom } from './module-loader';\r\n\r\nconst defaults = {\r\n    coreModuleName: '$app',\r\n    moduleLoader: includeModulesFrom,\r\n    missingDependencyHandler: undefined,\r\n    includeDirs: [\r\n        path.join(rootAppPath, 'node_modules', 'xublit*'), \r\n        path.join(rootAppPath, 'src'),\r\n    ],\r\n};\r\n\r\nexport class Injector extends EventEmitter {\r\n\r\n    constructor (opts) {\r\n\r\n        super();\r\n\r\n        opts = opts || {};\r\n\r\n        Object.keys(defaults).forEach(function (key) {\r\n            Object.defineProperty(this, key, {\r\n                value: key in opts ? opts[key] : defaults[key],\r\n                writable: false,\r\n                enumerable: true,\r\n            });\r\n        }, this);\r\n\r\n        Object.defineProperties(this, {\r\n\r\n            modulesByDependencyRef: {\r\n                value: new Map(),\r\n                writable: false,\r\n                enumerable: true,\r\n            },\r\n\r\n            modules: {\r\n                value: [],\r\n                writable: false,\r\n                enumerable: true,\r\n            },\r\n\r\n        });\r\n\r\n    }\r\n\r\n    bootstrap () {\r\n\r\n        Array.prototype.push.apply(\r\n            this.modules, \r\n            this.moduleLoader.findAllIn(this.includeDirs)\r\n        );\r\n        \r\n        this.modules.forEach(function (module) {\r\n\r\n            var dependency = new ModuleWrapper(module);\r\n\r\n            if (false === dependency.instanceOnly) {\r\n                this.modulesByDependencyRef.add(dependency.classRef, dependency);\r\n            }\r\n\r\n            this.modulesByDependencyRef.add(dependency.instanceRef, dependency);\r\n\r\n        }, this);\r\n\r\n        this.modulesByDependencyRef.forEach(function (dependency, ref) {\r\n            this.parse(dependency, ref);\r\n        }, this);\r\n\r\n        this.emit('bootstrapped');\r\n\r\n    }\r\n\r\n    parse (dependency, ref) {\r\n\r\n        if (dependency.isBootstrapped()) {\r\n            return dependency.injectableFor(ref);\r\n        }\r\n\r\n        var resolvedDependencies = this.resolveDependencies(\r\n            ref,\r\n            dependency.dependencyRefs\r\n        );\r\n\r\n    }\r\n\r\n    moduleForDependencyRef (ref) {\r\n        return this.modulesByDependencyRef.get(dependencyRef);\r\n    }\r\n\r\n    resolveDependencies (moduleRef, dependencyRefs) {\r\n\r\n        if (!dependencyRefs || dependencyRefs.length < 1) {\r\n            return [];\r\n        }\r\n\r\n        return dependencyRefs.map(function (dependencyRef, index) {\r\n\r\n            if ('' === dependencyRef) {\r\n                throw new Error(util.format(\r\n                    ERROR_MESSAGE_NONAME_DEPENDENCY, index\r\n                ));\r\n            }\r\n\r\n            var module = this.moduleForDependencyRef(dependencyRef);\r\n\r\n            if (undefined === module) {\r\n                return this.missingDependencyHandler(\r\n                    moduleRef,\r\n                    dependencyRef,\r\n                    index\r\n                );\r\n            }\r\n\r\n            return module\r\n                .bootstrap()\r\n                .injectableFor(dependencyRef);\r\n\r\n        }, this);\r\n\r\n    }\r\n\r\n    resolveDependencyRefs (refs) {\r\n\r\n        var resolvedDependencies;\r\n\r\n        try {\r\n\r\n            resolvedDependencies = this.resolveDependencies(\r\n                dependency.dependencies\r\n            );\r\n\r\n            resolvedDependencies.forEach(function (resolvedDependency, i) {\r\n\r\n                var dependencyUnmet = undefined === resolvedDependency;\r\n                if (dependencyUnmet) {\r\n                    throw new Error(util.format(\r\n                        ERROR_MESSAGE_UNMET_DEPENDENCY, resolvedDependency\r\n                    ));\r\n                }\r\n\r\n                if (!resolvedDependency.isBootstrapped) {\r\n                    let resolvedRef = resolvedDependency.dependencies[i];\r\n                    this.parse(this.dependency(resolvedRef), resolvedRef);\r\n                }\r\n\r\n            }, this);\r\n            \r\n        }\r\n        catch (error) {\r\n            this.handle(ERR_DEP_RESOLUTION_FAILED, error, dependency, ref);\r\n        }\r\n\r\n        return resolvedDependencies;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"]}